{"version":3,"sources":["./src/app/modules/confirm-dialog/confirm-dialog.module.ts","./src/environments/environment.ts","./src/app/modules/add-new-book/add-new-book.module.ts","./src/app/modules/update-book/update-book.module.ts","./src/app/modules/add-new-book/add-new-book/add-new-book.component.ts","./src/app/modules/add-new-book/add-new-book/add-new-book.component.html","./src/app/modules/book-details/book-details/book-details.component.ts","./src/app/modules/book-details/book-details/book-details.component.html","./src/app/modules/confirm-dialog/confirm-dialog/confirm-dialog.component.ts","./src/app/modules/confirm-dialog/confirm-dialog/confirm-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/constants.ts","./src/app/app.module.ts","./src/app/modules/book-details/book-details.module.ts","./src/app/modules/update-book/update-music/update-book.component.ts","./src/app/modules/update-book/update-music/update-book.component.html","./src/app/modules/books-list/books-list.module.ts","./src/app/modules/books-list/books-list/books-list.component.ts","./src/app/modules/books-list/books-list/books-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\n\n\n\n@NgModule({\n  declarations: [\n    ConfirmDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule\n  ]\n})\nexport class ConfirmDialogModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: `http://localhost/2017781/blog/public/`\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AddNewBookComponent} from './add-new-book/add-new-book.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [\n    AddNewBookComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSnackBarModule\n  ]\n})\nexport class AddNewBookModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UpdateBookComponent } from './update-music/update-book.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {ConfirmDialogModule} from '../confirm-dialog/confirm-dialog.module';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\n\n\n@NgModule({\n  declarations: [\n    UpdateBookComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    ConfirmDialogModule,\n    MatDialogModule,\n    MatButtonModule,\n    RouterModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule\n  ]\n})\nexport class UpdateBookModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Constants} from '../../../common/constants';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Router} from '@angular/router';\n\nconst reg = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n\n@Component({\n  selector: 'app-add-new-book',\n  templateUrl: './add-new-book.component.html',\n  styleUrls: ['./add-new-book.component.scss']\n})\nexport class AddNewBookComponent implements OnInit {\n\n  public isLoading = false;\n  public form: FormGroup = new FormGroup({\n    title: new FormControl(null, Validators.required),\n    description: new FormControl(null, Validators.required),\n    price: new FormControl(null, Validators.required),\n    author: new FormControl(null, Validators.required),\n    rating: new FormControl(null, Validators.required),\n    language: new FormControl(null, Validators.required),\n    img: new FormControl(null, [Validators.required])\n  });\n  public formData = new FormData();\n\n  constructor(\n    private httpClient: HttpClient,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  public fileUpload(event: any): void {\n    this.formData.append('file', event.target.files[0]);\n  }\n\n  uploadBookFile(): void {\n    if (this.form.valid) {\n      this.isLoading = true;\n      delete this.form.value.file;\n\n      this.httpClient.post(\n        Constants.bookFileUpload,\n        this.formData\n      ).subscribe((response: any) => {\n        console.log(response);\n        if (response && response.data) {\n          this.addNewBook(response.data);\n        }\n      });\n    }\n  }\n\n  addNewBook(file: string): void {\n    if (this.form.valid) {\n      this.isLoading = true;\n      const data = this.form.value;\n      data.img = file;\n      this.httpClient.post(\n        Constants.books,\n        data\n      ).subscribe((response: any) => {\n        this.snackBar.open(response.message, '', {\n          verticalPosition: 'top', duration: 4000\n        });\n        this.router.navigate(['/books']);\n      }, (error: any) => {\n        console.log(error);\n      });\n    }\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-lg-5 offset-lg-3\">\n\n    <mat-card>\n      <h2>Add New Book</h2>\n      <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"uploadBookFile()\">\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Title</mat-label>\n          <input matInput formControlName=\"title\">\n          <mat-error *ngIf=\"form?.get('title')?.errors\">Please enter Title</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n          <mat-error *ngIf=\"form?.get('description')?.errors\">Please enter Description</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Author</mat-label>\n          <input matInput formControlName=\"author\">\n          <mat-error *ngIf=\"form?.get('author')?.errors\">Please enter Author</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Price</mat-label>\n          <input type=\"number\" matInput formControlName=\"price\">\n          <mat-error *ngIf=\"form?.get('price')?.errors\">Please enter Price</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Rating</mat-label>\n          <input type=\"number\" matInput formControlName=\"rating\">\n          <mat-error *ngIf=\"form?.get('rating')?.errors\">Please enter Rating</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Language</mat-label>\n          <input matInput formControlName=\"language\">\n          <mat-error *ngIf=\"form?.get('language')?.errors\">Please enter Language</mat-error>\n        </mat-form-field>\n\n        <div class=\"form-group mb-4\">\n          <label for=\"img\">Image</label>\n          <input type=\"file\" class=\"form-control\" id=\"img\" formControlName=\"img\" (change)=\"fileUpload($event)\">\n          <mat-error *ngIf=\"form?.get('img')?.errors && form?.get('img')?.touched\">Please enter image URL</mat-error>\n        </div>\n\n        <div class=\"form-group mt-2\">\n          <button mat-raised-button [disabled]=\"form?.invalid\" color=\"primary\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </mat-card>\n\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseUrl, Constants} from '../../../common/constants';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.scss']\n})\nexport class BookDetailsComponent implements OnInit {\n\n  public book: any = {};\n  public baseUrl = BaseUrl;\n\n  constructor(\n    private httpClient: HttpClient,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.activatedRoute.params.subscribe(params => {\n      this.bookDetails(params.bookId);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  bookDetails(bookId: string): void {\n    this.httpClient.get(`${Constants.books}/${bookId}`)\n      .subscribe((response: any) => {\n        if (response && response.length > 0) {\n          this.book = response[0];\n        }\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"d-flex justify-content-start align-items-center mb-3\">\n      <a mat-raised-button color=\"primary\" routerLink=\"../../\">Back to Books</a>\n      <a mat-raised-button style=\"margin-left: 20px;\" [routerLink]=\"['/update-book', book.id]\">Update Details</a>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"row\">\n  <div class=\"col-lg-3\">\n    <mat-card class=\"example-card pb-0 pt-0 border-0 mt-3\">\n      <img mat-card-image class=\"border-0 book-img\" [src]=\"baseUrl + book?.img\"\n           alt=\"Photo of a Shiba Inu\">\n    </mat-card>\n  </div>\n\n  <div class=\"col-lg-9\">\n    <h1 class=\"mb-2 text-capitalize\">{{ book?.title }}</h1>\n\n    <a>By <b>{{ book?.author }}</b></a>\n\n    <p class=\"mt-2\">\n      {{ book?.description }}\n    </p>\n\n\n    <div class=\"d-block mt-3\">\n      <ul class=\"\">\n        <li>Language: {{ book?.language }}</li>\n        <li>Rating: {{ book?.rating }}</li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n  <h3>{{ data?.title }}</h3>\n</mat-dialog-content>\n\n<div class=\"d-flex justify-content-end align-items-center mt-3\">\n  <button class=\"btn btn-light\" (click)=\"dialogRef.close()\">Cancel</button>\n  <button class=\"btn btn-danger\" style=\"margin-left: 20px;\" (click)=\"dialogRef.close(true)\">{{ data?.btn }}</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'personal-library';\n}\n","<mat-toolbar color=\"primary\">\n  <a class=\"logo\" routerLink=\"/books\">Personal Library</a>\n  <span class=\"example-spacer\"></span>\n  <a mat-raised-button routerLink=\"/add-book\" class=\"example-icon favorite-icon\"\n     aria-label=\"Example icon-button with heart icon\">\n    Add New Book\n  </a>\n</mat-toolbar>\n\n\n<div class=\"container mt-3\">\n  <router-outlet></router-outlet>\n</div>\n","import {environment} from '../../environments/environment';\n\nexport const BaseUrl = environment.apiUrl;\n\nexport class Constants {\n  static books = BaseUrl + `books`;\n  static bookFileUpload = BaseUrl + 'books/upload';\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {BookDetailsModule} from './modules/book-details/book-details.module';\nimport {AddNewBookModule} from './modules/add-new-book/add-new-book.module';\nimport {BooksListModule} from './modules/books-list/books-list.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {UpdateBookModule} from './modules/update-book/update-book.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    BookDetailsModule,\n    AddNewBookModule,\n    UpdateBookModule,\n    BooksListModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BookDetailsComponent} from './book-details/book-details.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\n\n\n@NgModule({\n  declarations: [\n    BookDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    HttpClientModule,\n    RouterModule\n  ]\n})\nexport class BookDetailsModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseUrl, Constants} from '../../../common/constants';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../../confirm-dialog/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-update-music',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.scss']\n})\nexport class UpdateBookComponent implements OnInit {\n  public isLoading = false;\n  public form: FormGroup = new FormGroup({\n    title: new FormControl(null, Validators.required),\n    description: new FormControl(null, Validators.required),\n    price: new FormControl(null, Validators.required),\n    author: new FormControl(null, Validators.required),\n    rating: new FormControl(null, Validators.required),\n    language: new FormControl(null, Validators.required),\n    img: new FormControl(null)\n  });\n  public formData = new FormData();\n  public book: any = {};\n  public baseUrl = BaseUrl;\n\n  constructor(\n    private httpClient: HttpClient,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog\n  ) {\n    this.activatedRoute.params.subscribe(params => {\n      if (params.id) {\n        this.bookDetails(params.id);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  fileUpload(event: Event): void {\n    // @ts-ignore\n    this.form.patchValue({img: event.target.files[0].name});\n    // @ts-ignore\n    this.formData.append('file', event.target.files[0]);\n  }\n\n  bookDetails(bookId: string): void {\n    this.isLoading = true;\n    this.httpClient.get(`${Constants.books}/${bookId}`)\n      .subscribe((response: any) => {\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n        if (response && response.length > 0) {\n          this.book = response[0];\n          this.form.patchValue(this.book);\n          this.form.patchValue({img: ''});\n        }\n      });\n  }\n\n  uploadBookFile(): void {\n    if (this.form.valid) {\n      this.dialog.open(ConfirmDialogComponent, {\n        width: `450px`,\n        data: {title: `Are you sure you want to update?`, btn: `Update`}\n      }).afterClosed().subscribe(confirmed => {\n        if (confirmed) {\n          if (this.form.value.img) {\n            this.isLoading = true;\n            delete this.form.value.img;\n\n            this.httpClient.post(\n              Constants.bookFileUpload,\n              this.formData\n            ).subscribe((response: any) => {\n              console.log(response);\n              if (response && response.data) {\n                this.updateNewBook(response.data);\n              }\n            });\n          } else {\n            this.updateNewBook(this.book.img);\n          }\n        }\n      });\n    }\n  }\n\n  updateNewBook(file: string): void {\n    const data = this.form.value;\n    data.img = file;\n    this.httpClient.put(\n      `${Constants.books}/${this.book.id}`,\n      data\n    ).subscribe((response: any) => {\n      this.snackBar.open(response.message, '', {\n        verticalPosition: 'top', duration: 4000\n      });\n      this.router.navigate(['/books']);\n    }, (error: any) => {\n      console.log(error);\n    });\n  }\n\n  deleteConfirm(): void {\n    this.dialog.open(ConfirmDialogComponent, {\n      width: '450px',\n      data: {\n        title: `Are you sure you want to delete?`,\n        btn: `Delete`\n      }\n    }).afterClosed().subscribe(confirmed => {\n      if (confirmed) {\n        this.httpClient.delete(`${Constants.books}/${this.book.id}`)\n          .subscribe((response: any) => {\n            console.log(response);\n            this.snackBar.open(response.message, '', {\n              duration: 4000, verticalPosition: 'top'\n            });\n            this.router.navigate(['/books']);\n          });\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-lg-5 offset-lg-3\">\n\n    <mat-card>\n      <h2>Update Book Details</h2>\n      <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"uploadBookFile()\">\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Title</mat-label>\n          <input matInput formControlName=\"title\">\n          <mat-error *ngIf=\"form?.get('title')?.errors\">Please enter Title</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Description</mat-label>\n          <textarea matInput formControlName=\"description\"></textarea>\n          <mat-error *ngIf=\"form?.get('description')?.errors\">Please enter Description</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Author</mat-label>\n          <input matInput formControlName=\"author\">\n          <mat-error *ngIf=\"form?.get('author')?.errors\">Please enter Author</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Price</mat-label>\n          <input type=\"number\" matInput formControlName=\"price\">\n          <mat-error *ngIf=\"form?.get('price')?.errors\">Please enter Price</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Rating</mat-label>\n          <input type=\"number\" matInput formControlName=\"rating\">\n          <mat-error *ngIf=\"form?.get('rating')?.errors\">Please enter Rating</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Book Language</mat-label>\n          <input matInput formControlName=\"language\">\n          <mat-error *ngIf=\"form?.get('language')?.errors\">Please enter Language</mat-error>\n        </mat-form-field>\n\n        <div class=\"form-group mb-2\">\n          <label for=\"img\">Image</label>\n          <input type=\"file\" class=\"form-control\" id=\"img\" (change)=\"fileUpload($event)\">\n          <mat-error *ngIf=\"form?.get('img')?.errors && form?.get('img')?.touched\">Please enter image URL</mat-error>\n        </div>\n\n        <div class=\"d-block mt-2 mb-4\">\n          <img [src]=\"baseUrl + book?.img\" alt=\"Book Details\" width=\"100\" height=\"100\">\n        </div>\n\n        <div class=\"d-flex justify-content-start align-items-center\">\n          <button mat-raised-button [disabled]=\"form?.invalid\" color=\"primary\" type=\"submit\">Submit</button>\n          <button mat-raised-button (click)=\"deleteConfirm()\" style=\"margin-left: 20px;\" color=\"accent\" type=\"button\">\n            Delete\n          </button>\n        </div>\n      </form>\n    </mat-card>\n\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BooksListComponent} from './books-list/books-list.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  declarations: [\n    BooksListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    RouterModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class BooksListModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {BaseUrl, Constants} from '../../../common/constants';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-books-list',\n  templateUrl: './books-list.component.html',\n  styleUrls: ['./books-list.component.scss']\n})\nexport class BooksListComponent implements OnInit {\n\n  public isLoading = false;\n  public books: any[] = [];\n  public search = new FormControl(null);\n  public baseUrl = BaseUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getBooks('');\n\n    this.search\n      .valueChanges\n      .pipe(debounceTime(500))\n      .subscribe(search => {\n        this.getBooks(search);\n      });\n  }\n\n  getBooks(search: string): void {\n    this.isLoading = true;\n    let httpParams = new HttpParams();\n    if (search) {\n      httpParams = httpParams.append('searchText', search);\n    }\n    this.httpClient.get(Constants.books, {\n      params: httpParams\n    }).subscribe((response: any) => {\n      setTimeout(() => {\n        this.isLoading = false;\n        this.books = response;\n      }, 1500);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <h2 class=\"mb-0\">Books</h2>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-lg-4\">\n    <mat-form-field class=\"w-100 mb-3\">\n      <input matInput placeholder=\"Search by book titles\" [formControl]=\"search\">\n    </mat-form-field>\n\n\n    <div class=\"d-block mt-0\" *ngIf=\"isLoading\">\n      <mat-spinner [diameter]=\"30\"></mat-spinner>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"row\">\n  <div class=\"col-lg-4\" *ngFor=\"let item of books\">\n    <mat-card class=\"example-card mb-3\">\n      <mat-card-header>\n        <mat-card-title [title]=\"item?.title\">{{ item.title?.slice(0, 30) }}...</mat-card-title>\n        <mat-card-subtitle>{{ item.author }}</mat-card-subtitle>\n      </mat-card-header>\n      <div class=\"d-flex justify-content-center align-items-center mb-3\">\n        <img [src]=\"baseUrl + item?.img\" alt=\"Photo of a Shiba Inu\">\n      </div>\n      <mat-card-content class=\"description\">\n        <p [title]=\"item?.description\">\n          {{ item.description?.slice(0, 200) }} ...\n        </p>\n      </mat-card-content>\n      <mat-card-actions>\n        <a routerLink=\"/book-details/{{ item.id }}\" mat-button>View Details</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n\n\n<div class=\"row\" *ngIf=\"!books.length\">\n  <div class=\"col-lg-6\">\n    <div class=\"card mt-3\">\n      <div class=\"card-body\">\n        <p class=\"mb-0 text-danger\">No Books found</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BookDetailsComponent} from './modules/book-details/book-details/book-details.component';\nimport {AddNewBookComponent} from './modules/add-new-book/add-new-book/add-new-book.component';\nimport {BooksListComponent} from './modules/books-list/books-list/books-list.component';\nimport {UpdateBookComponent} from './modules/update-book/update-music/update-book.component';\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: '/books', pathMatch: 'full'\n  },\n  {\n    path: 'books',\n    component: BooksListComponent\n  },\n  {\n    path: 'book-details/:bookId',\n    component: BookDetailsComponent\n  },\n  {\n    path: 'update-book/:id',\n    component: UpdateBookComponent\n  },\n  {\n    path: 'add-book',\n    component: AddNewBookComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}